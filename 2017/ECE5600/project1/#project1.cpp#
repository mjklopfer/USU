#include "frameio.h"
#include "util.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <pthread.h>

frameio net;             // gives us access to the raw network

struct ether_frame       // handy template for 802.3/DIX frames
{
   octet dst_mac[6];     // destination MAC address
   octet src_mac[6];     // source MAC address
   octet prot[2];        // protocol (or length)
   octet data[1500];     // payload
};

//Frames are recieved and placed into buffer. Bad frames are rejected
void *protocol_loop(void *arg)
{
   ether_frame buf;
   while(1)
   {
      int n = net.recv_frame(&buf,sizeof(buf));
      if ( n < 42 ) continue; // bad frame!

      for (int i = 0; i < 6; i++)
        printf("%02X ", buf.dst_mac[i]);
      for (int i = 0; i < 6; i++)
        printf("%02X ", buf.src_mac[i]);
      for (int i = 0; i < 2; i++)
        printf("%02X ", buf.prot[i]);
      for (int i = 0; i < 8; i++)
        printf("%02X ", buf.data[i]);
      printf("\n");
      for (int i = 8; i < 28; i++)
        printf("%02X ", buf.data[i]);
      printf("\n\n");

   }
}

pthread_t loop_thread;

int main()
{
   net.open_net("enp3s0");
   pthread_create(&loop_thread,NULL,protocol_loop,NULL);
   for ( ; ; )
      sleep(1);
}

