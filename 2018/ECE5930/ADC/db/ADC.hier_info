|ADC
ADC_CLK_10 => ~NO_FANOUT~
MAX10_CLK1_50 => adc_qsys:u0.clk_clk
MAX10_CLK1_50 => DATA_OUT[0].CLK
MAX10_CLK1_50 => DATA_OUT[1].CLK
MAX10_CLK1_50 => DATA_OUT[2].CLK
MAX10_CLK1_50 => DATA_OUT[3].CLK
MAX10_CLK1_50 => DATA_OUT[4].CLK
MAX10_CLK1_50 => DATA_OUT[5].CLK
MAX10_CLK1_50 => DATA_OUT[6].CLK
MAX10_CLK1_50 => DATA_OUT[7].CLK
MAX10_CLK1_50 => DATA_OUT[8].CLK
MAX10_CLK1_50 => DATA_OUT[9].CLK
MAX10_CLK1_50 => DATA_OUT[10].CLK
MAX10_CLK1_50 => DATA_OUT[11].CLK
MAX10_CLK1_50 => ADC_PLL:u2.inclk0
MAX10_CLK1_50 => sevenSeg:dig1.clk
MAX10_CLK1_50 => sevenSeg:dig2.clk
MAX10_CLK1_50 => sevenSeg:dig3.clk
MAX10_CLK2_50 => ~NO_FANOUT~
HEX0[0] <= sevenSeg:dig1.seg_out[0]
HEX0[1] <= sevenSeg:dig1.seg_out[1]
HEX0[2] <= sevenSeg:dig1.seg_out[2]
HEX0[3] <= sevenSeg:dig1.seg_out[3]
HEX0[4] <= sevenSeg:dig1.seg_out[4]
HEX0[5] <= sevenSeg:dig1.seg_out[5]
HEX0[6] <= sevenSeg:dig1.seg_out[6]
HEX0[7] <= sevenSeg:dig1.seg_out[7]
HEX1[0] <= sevenSeg:dig2.seg_out[0]
HEX1[1] <= sevenSeg:dig2.seg_out[1]
HEX1[2] <= sevenSeg:dig2.seg_out[2]
HEX1[3] <= sevenSeg:dig2.seg_out[3]
HEX1[4] <= sevenSeg:dig2.seg_out[4]
HEX1[5] <= sevenSeg:dig2.seg_out[5]
HEX1[6] <= sevenSeg:dig2.seg_out[6]
HEX1[7] <= sevenSeg:dig2.seg_out[7]
HEX2[0] <= sevenSeg:dig3.seg_out[0]
HEX2[1] <= sevenSeg:dig3.seg_out[1]
HEX2[2] <= sevenSeg:dig3.seg_out[2]
HEX2[3] <= sevenSeg:dig3.seg_out[3]
HEX2[4] <= sevenSeg:dig3.seg_out[4]
HEX2[5] <= sevenSeg:dig3.seg_out[5]
HEX2[6] <= sevenSeg:dig3.seg_out[6]
HEX2[7] <= sevenSeg:dig3.seg_out[7]
HEX3[0] <= <VCC>
HEX3[1] <= <VCC>
HEX3[2] <= <VCC>
HEX3[3] <= <VCC>
HEX3[4] <= <VCC>
HEX3[5] <= <VCC>
HEX3[6] <= <VCC>
HEX3[7] <= <VCC>
HEX4[0] <= <VCC>
HEX4[1] <= <VCC>
HEX4[2] <= <VCC>
HEX4[3] <= <VCC>
HEX4[4] <= <VCC>
HEX4[5] <= <VCC>
HEX4[6] <= <VCC>
HEX4[7] <= <VCC>
HEX5[0] <= <VCC>
HEX5[1] <= <VCC>
HEX5[2] <= <VCC>
HEX5[3] <= <VCC>
HEX5[4] <= <VCC>
HEX5[5] <= <VCC>
HEX5[6] <= <VCC>
HEX5[7] <= <VCC>
KEY[0] => ADC_PLL:u2.areset
KEY[1] => ~NO_FANOUT~


|ADC|adc_qsys:u0
clk_clk => ~NO_FANOUT~
clock_bridge_sys_out_clk_clk <= <GND>
modular_adc_0_command_valid => ~NO_FANOUT~
modular_adc_0_command_channel[0] => ~NO_FANOUT~
modular_adc_0_command_channel[1] => ~NO_FANOUT~
modular_adc_0_command_channel[2] => ~NO_FANOUT~
modular_adc_0_command_channel[3] => ~NO_FANOUT~
modular_adc_0_command_channel[4] => ~NO_FANOUT~
modular_adc_0_command_startofpacket => ~NO_FANOUT~
modular_adc_0_command_endofpacket => ~NO_FANOUT~
modular_adc_0_command_ready <= <GND>
modular_adc_0_response_valid <= <GND>
modular_adc_0_response_channel[0] <= <GND>
modular_adc_0_response_channel[1] <= <GND>
modular_adc_0_response_channel[2] <= <GND>
modular_adc_0_response_channel[3] <= <GND>
modular_adc_0_response_channel[4] <= <GND>
modular_adc_0_response_data[0] <= <GND>
modular_adc_0_response_data[1] <= <GND>
modular_adc_0_response_data[2] <= <GND>
modular_adc_0_response_data[3] <= <GND>
modular_adc_0_response_data[4] <= <GND>
modular_adc_0_response_data[5] <= <GND>
modular_adc_0_response_data[6] <= <GND>
modular_adc_0_response_data[7] <= <GND>
modular_adc_0_response_data[8] <= <GND>
modular_adc_0_response_data[9] <= <GND>
modular_adc_0_response_data[10] <= <GND>
modular_adc_0_response_data[11] <= <GND>
modular_adc_0_response_startofpacket <= <GND>
modular_adc_0_response_endofpacket <= <GND>
reset_reset_n => ~NO_FANOUT~


|ADC|ADC_PLL:u2
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|ADC|ADC_PLL:u2|altpll:altpll_component
inclk[0] => ADC_PLL_altpll:auto_generated.inclk[0]
inclk[1] => ADC_PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ADC_PLL_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= ADC_PLL_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|ADC|ADC_PLL:u2|altpll:altpll_component|ADC_PLL_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|ADC|sevenSeg:dig1
clk => seg_out[0]~reg0.CLK
clk => seg_out[1]~reg0.CLK
clk => seg_out[2]~reg0.CLK
clk => seg_out[3]~reg0.CLK
clk => seg_out[4]~reg0.CLK
clk => seg_out[5]~reg0.CLK
clk => seg_out[6]~reg0.CLK
clk => seg_out[7]~reg0.CLK
num_in[0] => Mux0.IN19
num_in[0] => Mux1.IN19
num_in[0] => Mux2.IN19
num_in[0] => Mux3.IN19
num_in[0] => Mux4.IN19
num_in[0] => Mux5.IN19
num_in[0] => Mux6.IN19
num_in[1] => Mux0.IN18
num_in[1] => Mux1.IN18
num_in[1] => Mux2.IN18
num_in[1] => Mux3.IN18
num_in[1] => Mux4.IN18
num_in[1] => Mux5.IN18
num_in[1] => Mux6.IN18
num_in[2] => Mux0.IN17
num_in[2] => Mux1.IN17
num_in[2] => Mux2.IN17
num_in[2] => Mux3.IN17
num_in[2] => Mux4.IN17
num_in[2] => Mux5.IN17
num_in[2] => Mux6.IN17
num_in[3] => Mux0.IN16
num_in[3] => Mux1.IN16
num_in[3] => Mux2.IN16
num_in[3] => Mux3.IN16
num_in[3] => Mux4.IN16
num_in[3] => Mux5.IN16
num_in[3] => Mux6.IN16
seg_out[0] <= seg_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[1] <= seg_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[2] <= seg_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[3] <= seg_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[4] <= seg_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[5] <= seg_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[6] <= seg_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[7] <= seg_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dec => seg_out[7]~reg0.DATAIN


|ADC|sevenSeg:dig2
clk => seg_out[0]~reg0.CLK
clk => seg_out[1]~reg0.CLK
clk => seg_out[2]~reg0.CLK
clk => seg_out[3]~reg0.CLK
clk => seg_out[4]~reg0.CLK
clk => seg_out[5]~reg0.CLK
clk => seg_out[6]~reg0.CLK
clk => seg_out[7]~reg0.CLK
num_in[0] => Mux0.IN19
num_in[0] => Mux1.IN19
num_in[0] => Mux2.IN19
num_in[0] => Mux3.IN19
num_in[0] => Mux4.IN19
num_in[0] => Mux5.IN19
num_in[0] => Mux6.IN19
num_in[1] => Mux0.IN18
num_in[1] => Mux1.IN18
num_in[1] => Mux2.IN18
num_in[1] => Mux3.IN18
num_in[1] => Mux4.IN18
num_in[1] => Mux5.IN18
num_in[1] => Mux6.IN18
num_in[2] => Mux0.IN17
num_in[2] => Mux1.IN17
num_in[2] => Mux2.IN17
num_in[2] => Mux3.IN17
num_in[2] => Mux4.IN17
num_in[2] => Mux5.IN17
num_in[2] => Mux6.IN17
num_in[3] => Mux0.IN16
num_in[3] => Mux1.IN16
num_in[3] => Mux2.IN16
num_in[3] => Mux3.IN16
num_in[3] => Mux4.IN16
num_in[3] => Mux5.IN16
num_in[3] => Mux6.IN16
seg_out[0] <= seg_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[1] <= seg_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[2] <= seg_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[3] <= seg_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[4] <= seg_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[5] <= seg_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[6] <= seg_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[7] <= seg_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dec => seg_out[7]~reg0.DATAIN


|ADC|sevenSeg:dig3
clk => seg_out[0]~reg0.CLK
clk => seg_out[1]~reg0.CLK
clk => seg_out[2]~reg0.CLK
clk => seg_out[3]~reg0.CLK
clk => seg_out[4]~reg0.CLK
clk => seg_out[5]~reg0.CLK
clk => seg_out[6]~reg0.CLK
clk => seg_out[7]~reg0.CLK
num_in[0] => Mux0.IN19
num_in[0] => Mux1.IN19
num_in[0] => Mux2.IN19
num_in[0] => Mux3.IN19
num_in[0] => Mux4.IN19
num_in[0] => Mux5.IN19
num_in[0] => Mux6.IN19
num_in[1] => Mux0.IN18
num_in[1] => Mux1.IN18
num_in[1] => Mux2.IN18
num_in[1] => Mux3.IN18
num_in[1] => Mux4.IN18
num_in[1] => Mux5.IN18
num_in[1] => Mux6.IN18
num_in[2] => Mux0.IN17
num_in[2] => Mux1.IN17
num_in[2] => Mux2.IN17
num_in[2] => Mux3.IN17
num_in[2] => Mux4.IN17
num_in[2] => Mux5.IN17
num_in[2] => Mux6.IN17
num_in[3] => Mux0.IN16
num_in[3] => Mux1.IN16
num_in[3] => Mux2.IN16
num_in[3] => Mux3.IN16
num_in[3] => Mux4.IN16
num_in[3] => Mux5.IN16
num_in[3] => Mux6.IN16
seg_out[0] <= seg_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[1] <= seg_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[2] <= seg_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[3] <= seg_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[4] <= seg_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[5] <= seg_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[6] <= seg_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_out[7] <= seg_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dec => seg_out[7]~reg0.DATAIN


